openapi: 3.0.0
info:
  title: Todo API
  version: 1.0.0
  description: API documentation for Todo Application

servers:
  - url: "{{SERVER_URL}}"
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /todoAuth/registerUser:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - userEmail
                - userPassword
              properties:
                userName:
                  type: string
                userEmail:
                  type: string
                userPassword:
                  type: string
      responses:
        201:
          description: User registered successfully
        400:
          description: User already exists or invalid data
        500:
          description: Server error

  /todoAuth/loginUser:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userEmail
                - userPassword
              properties:
                userEmail:
                  type: string
                userPassword:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials
        500:
          description: Server error

  /todoItems/createTodo:
    post:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Create a new todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - todoTitle
              properties:
                todoTitle:
                  type: string
                todoDescription:
                  type: string
                todoStatus:
                  type: string
                  enum: [notStarted, ongoing, finished]
                todoDeadline:
                  type: string
                  format: date-time
      responses:
        201:
          description: Todo created successfully
        401:
          description: Not authorized
        500:
          description: Server error

  /todoItems/getAllTodos:
    get:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Get all todos for logged-in user
      responses:
        200:
          description: List of todos retrieved successfully
        401:
          description: Not authorized
        500:
          description: Server error

  /todoItems/getTodo/{id}:
    get:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Get a specific todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Todo retrieved successfully
        401:
          description: Not authorized
        404:
          description: Todo not found
        500:
          description: Server error

  /todoItems/updateTodo/{id}:
    put:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Update a todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                todoTitle:
                  type: string
                todoDescription:
                  type: string
                todoStatus:
                  type: string
                  enum: [notStarted, ongoing, finished]
                todoDeadline:
                  type: string
                  format: date-time
      responses:
        200:
          description: Todo updated successfully
        401:
          description: Not authorized
        404:
          description: Todo not found
        500:
          description: Server error

  /todoItems/deleteTodo/{id}:
    delete:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Delete a todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Todo deleted successfully
        401:
          description: Not authorized
        404:
          description: Todo not found
        500:
          description: Server error
